# -*- coding: utf-8 -*-
"""pandas_games_exercise.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CKrPb2L6yzwbxUqc2AuNz6baB8ObzZMY

1 - Escreva um código que receba como entrada o nome, ou parte do nome, de um jogo, e que imprima ao usuário os jogos encontrados, bem como sua plataforma, ano, gênero e publicador.
O programa deve aceitar diferentes formas de escrita. Por exemplo, caso o usuário digite "mAriO", o programa deve devolver todos os jogos que contém "mario" no nome.
Os valores impressos do nome dos jogos devem estar em formato de título, isso é, apenas as primeiras letras de cada palavra em maiúsculo. Faça uso da base de dados disponível em  e use o Pandas na resolução do exercício.
"""

import pandas as pd

# Carregando o arquivo CSV para o ambiente do Colab
file_name='/content/drive/MyDrive/video_games1.xlsx'

df=pd.read_excel('/content/drive/MyDrive/video_games1.xlsx')

"""# NOMES DOS JOGOS"""

# Função para formatar o nome dos jogos em formato de título
def formatar_nome(nome):
    return nome.title()

# Função para buscar e imprimir os jogos com base no nome
def buscar_jogos_por_nome(nome):
    # Converter o nome inserido pelo usuário para letras minúsculas para fazer a comparação
    nome = nome.lower()
    # Filtrar os jogos que contêm o nome inserido pelo usuário
    jogos_encontrados = df[df['nome'].str.lower().str.contains(nome)]
    # Verificar se foram encontrados jogos
    if not jogos_encontrados.empty:
        # Imprimir os detalhes dos jogos encontrados
        for index, jogo in jogos_encontrados.iterrows():
            print("nome: {}\nPlataforma: {}\nAno: {}\nGenero: {}\nPublicador: {}\n".format(
                formatar_nome(jogo['nome']), jogo['Plataforma'], jogo['Ano'], jogo['Genero'], jogo['Publicador']))
    else:
        print("Nenhum jogo encontrado com esse nome.")

# Receber o nome ou parte do nome do jogo do usuário
nome_do_jogo = input("Digite o nome ou parte do nome do jogo: ")

# Chamar a função para buscar e imprimir os jogos com base no nome inserido pelo usuário
buscar_jogos_por_nome(nome_do_jogo)

"""# PLATAFORMA DOS JOGOS/ CONSOLE"""

# Função para formatar o nome dos jogos em formato de título
def formatar_plataforma(plataforma):
    return platafoma.title()

# Função para buscar e imprimir os jogos com base na Plataforma
def buscar_jogos_por_plataforma(plataforma):
    # Converter o nome inserido pelo usuário para letras minúsculas para fazer a comparação
    plataforma = plataforma.lower()
    # Filtrar os jogos que contêm a Plataforma inserida pelo usuário
    plataformas_encontradas = df[df['plataforma'].str.lower().str.contains(plataforma)]
    # Verificar se foram encontrados jogos
    if not plataformas_encontradas.empty:
        # Imprimir os detalhes das Plataformas encontradas
        for index, jogo in plataformas_encontradas.iterrows():
            print("nome: {}\nplataforma: {}\nAno: {}\nGênero: {}\nPublicador: {}\n".format(
                formatar_nome(jogo['nome']), jogo['plataforma'], jogo['Ano'], jogo['Genero'], jogo['Publicador']))
    else:
        print("Nenhuma plataforma encontrada com esse nome.")

# Receber o nome ou parte do nome da plataforma
nome_da_plataforma = input("Digite o nome ou parte do nome da plataforma: ")

# Chamar a função para buscar e imprimir os jogos com base no nome inserido pelo usuário
buscar_jogos_por_plataforma(nome_da_plataforma)

"""# ANO DE LANÇAMENTO DO JOGO"""

# Função para formatar o ano dos jogos em formato de título
def formatar_ano(ano):
    return str(ano).title()

# Função para buscar e imprimir os jogos com base no Ano
def buscar_jogos_por_ano(ano):
    # Converter o nome inserido pelo usuário para letras minúsculas para fazer a comparação
    ano = ano.lower()
    # Filtrar os jogos que contêm ano inserido pelo usuário
    ano_encontrado = df[df['ano'].astype(str).str.lower().str.contains(ano)]
    # Verificar se foram encontrados jogos
    if not ano_encontrado.empty:
        # Imprimir os detalhes das Plataformas encontradas
        for index, jogo in ano_encontrado.iterrows():
            print("nome: {}\nplataforma: {}\nano: {}\nGênero: {}\nPublicador: {}\n".format(
                jogo['nome'].title(), jogo['plataforma'], formatar_ano(jogo['ano']), jogo['Genero'], jogo['Publicador']))
    else:
        print("Nenhum ano encontrado com esse nome.")

# Receber o ano que foi lançado o jogo
ano_do_jogo = input("Digite o ano que foi lançado o Jogo: ")

# Chamar a função para buscar e imprimir o ano que foi lançado os jogos
buscar_jogos_por_ano(ano_do_jogo)

"""# GENERO DO JOGO"""

# Função para formatar o nome dos jogos em formato de título
def formatar_genero(genero):
    return genero.title()

# Função para buscar e imprimir os jogos com base no Gênero
def buscar_jogos_por_genero(genero):
    # Converter o gênero inserido pelo usuário para letras minúsculas para fazer a comparação
    genero = genero.lower()
    # Filtrar os jogos que contêm o gênero inserido pelo usuário
    genero_encontrado = df[df['Genero'].str.lower().str.contains(genero)]
    # Verificar se foram encontrados jogos
    if not genero_encontrado.empty:
        # Imprimir os detalhes dos jogos encontrados
        for index, jogo in genero_encontrado.iterrows():
            print("Nome: {}\nPlataforma: {}\nAno: {}\nGênero: {}\nPublicador: {}\n".format(
                jogo['nome'].title(), jogo['plataforma'], formatar_ano(jogo['ano']), jogo['Genero'], jogo['Publicador']))
    else:
        print("Nenhum jogo encontrado com esse gênero.")

# Receber o gênero do jogo
genero_do_jogo = input("Digite o gênero do jogo: ")

# Chamar a função para buscar e imprimir os jogos com base no gênero
buscar_jogos_por_genero(genero_do_jogo)

"""# JOGOS POR PUBLICADOR"""

# Função para formatar o nome dos jogos em formato de título
def formatar_publicador(publicador):
    return publicador.title()

# Função para buscar e imprimir os jogos com base no Publicador
def buscar_jogos_por_publicador(publicador):
    # Converter o publicador inserido pelo usuário para letras minúsculas para fazer a comparação
    publicador = publicador.lower()
    # Preencher valores nulos na coluna 'Publicador'
    df['Publicador'].fillna('', inplace=True)
    # Filtrar os jogos que contêm o publicador inserido pelo usuário
    publicador_encontrado = df[df['Publicador'].str.lower().str.contains(publicador)]
    # Verificar se foram encontrados jogos
    if not publicador_encontrado.empty:
        # Imprimir os detalhes dos jogos encontrados
        for index, jogo in publicador_encontrado.iterrows():
            print("nome: {}\nplataforma: {}\nano: {}\nGenero: {}\nPublicador: {}\n".format(
                jogo['nome'].title(), jogo['plataforma'], formatar_ano(jogo['ano']), jogo['Genero'], jogo['Publicador']))
    else:
        print("Nenhum jogo encontrado desse publicador.")

# Receber o publicador do jogo
publicador_do_jogo = input("Digite o publicador do jogo: ")

# Chamar a função para buscar e imprimir os jogos com base no publicador
buscar_jogos_por_publicador(publicador_do_jogo)